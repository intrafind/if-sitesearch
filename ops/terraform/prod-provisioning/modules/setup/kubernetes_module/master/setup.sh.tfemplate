${init_commands}
#install docker-ce
sudo apt-get update
sudo apt-get install -y \
    sudo apt-transport-https \
    ca-certificates \
    curl \
    software-properties-common
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
sudo add-apt-repository \
   "deb [arch=amd64] https://download.docker.com/linux/$(. /etc/os-release; echo "$ID") \
   $(lsb_release -cs) \
   stable"
sudo apt-get update && sudo apt-get install -y docker-ce=$(apt-cache madison docker-ce | grep 17.03 | head -1 | awk '{print $3}')

#install kubernetes
sudo apt-get update && sudo apt-get install -y apt-transport-https
curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -
sudo sh -c 'cat <<EOF >/etc/apt/sources.list.d/kubernetes.list
deb http://apt.kubernetes.io/ kubernetes-xenial main
EOF'
sudo apt-get update
sudo apt-get install -y kubeadm kubelet kubectl

sudo cp gce.conf /etc/kubernetes/cloud-config
sudo sed -i -E 's/(.*)KUBELET_KUBECONFIG_ARGS=(.*)$/\1KUBELET_KUBECONFIG_ARGS=--cloud-provider=gce --cloud-config=\/etc\/kubernetes\/cloud-config \2/' /etc/systemd/system/kubelet.service.d/10-kubeadm.conf
sudo sed -i "s/cgroup-driver=systemd/cgroup-driver=cgroupfs/g" /etc/systemd/system/kubelet.service.d/10-kubeadm.conf
sudo systemctl daemon-reload
sudo systemctl restart kubelet

#initialize cluster
if [[ $(sudo kubeadm config view) ]]; then echo "Cluster already running" ; else sudo kubeadm init --config kubeadm.conf; fi

#Make kubectl executable by non root user
sudo cp /etc/kubernetes/admin.conf $HOME/
sudo chown $(id -u):$(id -g) $HOME/admin.conf
export KUBECONFIG=$HOME/admin.conf
echo "export KUBECONFIG=$HOME/admin.conf">> .profile

# Make networking between nodes and master possible with Calico.
kubectl apply -f https://docs.projectcalico.org/v3.0/getting-started/kubernetes/installation/hosted/kubeadm/1.7/calico.yaml

# Create connection to registry. This secret has to be mentioned in the Pod definition.
kubectl create secret docker-registry ${docker_registry_secret_name} --docker-server=${docker_registry_address} --docker-username=${docker_registry_username} --docker-password=${docker_registry_password} --docker-email=this.field.is@deprecated.com

# Make containers schedulable on master.
kubectl taint nodes --all node-role.kubernetes.io/master-

# Expose DNS
kubectl --namespace=kube-system get svc kube-dns -o yaml > kube-dns.yaml
sed -i 's/ClusterIP/NodePort/' kube-dns.yaml
kubectl --namespace=kube-system apply -f kube-dns.yaml
rm kube-dns.yaml

echo "Waiting for cluster to initialize"
sleep 20

${start_up_commands}
