
#Service that connects Searchservice pods to the rest of the cluster and the outside
apiVersion: v1
kind: Service
metadata:
  name: sitesearch-searchservice
spec:
  #Give this a static IP
  clusterIP: 10.105.217.74
  #This specifies to what the requsts get forwarded (to the app called searchservice)
  selector:
    app: sitesearch-searchservice
  ports:
  - name: sitesearch-searchservice-endpoint
    port: 9605
    targetPort: 9605
---
#Searchservice as a Statefulset:
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: sitesearch-searchservice
  labels:
    app: sitesearch-searchservice
spec:
  serviceName: "sitesearch-searchservice"
  replicas: ${count}
  #Describes the grouping of the pods -> which pods should be included in the StatefulSet
  selector:
    matchLabels:
      app: sitesearch-searchservice
  #template describes what the pods of a StatefulSet should look like
  template:
    metadata:
      #Adding it to the app called searchservice
      labels:
        app: sitesearch-searchservice
    spec:
      #Describing containers in the pods. In our case we only have 1 container per pod.
      containers:
        - name: sitesearch-searchservice
          image: docker-registry.sitesearch.cloud/intrafind/sis-search-service:2.4.6.7
          env:
            #The elasticsearch_hosts environment variable points to the service (the reverse proxy)
            - name: elasticsearch_hosts
              value: "sitesearch-elasticsearch"
            - name: DNS_SUFFIX
              value: "sitesearch-elasticsearch.default.svc.cluster.local:9300"
            - name: Replace_Trigger
              value: "REPLACE_TRIGGER_VALUEtrue"
          #This creates a PVC (Persistent Volume Claim) -> this is not the volume, just the claim
          #The volume is declared further down and connected to the claim by (in this case) the name parameter.
          volumeMounts:
          - name: searchservice-data
            mountPath: /srv/sitesearch-search-service
            name: searchservice-data-volume
          command: ["/bin/sh"]
          args: ["-c","sed -i \"s/ELASTICSEARCH_HOSTS/\$(echo -n \$(for X in \$(seq 0 ${count - 2}); do echo -n elasticsearch-\$X.\$DNS_SUFFIX,;done)elasticsearch-quorum-0.\$DNS_SUFFIX)/g\" /home/app_user/sitesearch-search-service/config.cfg;
          cp -r /home/app_user/sitesearch-search-service/* /srv/;
           /srv/bin/runConsole.sh"]
          volumeMounts:
          - name: google-persistent-disk
            mountPath: /srv
          #Readiness probe that is done every 5 seconds
          #It tells the service (the load balancer) if the container can serve requests
          #readinessProbe is an optional feature
          readinessProbe:
            httpGet:
              port: 9605
              path: /json/search?method=search
            initialDelaySeconds: 5
            periodSeconds: 5
          livenessProbe:
            httpGet:
              port: 9605
              path: /json/search?method=search
            initialDelaySeconds: 120
            periodSeconds: 20
            failureThreshold: 3
      #This functions like docker login, to pull the image from the correct registry.
      imagePullSecrets:
        - name: sitesearch-secret
  volumeClaimTemplates:
    - metadata:
        name: google-persistent-disk
      spec:
        accessModes: [ "ReadWriteOnce" ]
        storageClassName: gce-searchservice-node
        resources:
          requests:
            storage: 10Gi