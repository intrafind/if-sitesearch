user  nginx;
worker_processes  1;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

events {
    worker_connections  1024;
}

http {
    server_tokens off; # hide nginx version

    server {
        listen 80 default_server;

        location / {
            include /etc/nginx/snippets/cors-headers.conf;
            proxy_pass http://sis-sitesearch:8001;
        }

        location /status {
            auth_basic "Protected";
            auth_basic_user_file /etc/nginx/.htpasswd;
            stub_status on;
            access_log  off;
        }
    }

    server {
        listen 80;
        server_name sitesearch.cloud;

        location / {
            proxy_pass http://mirror.sitesearch.online;
        }
    }

    server {
        listen 80;
        server_name doc.sitesearch.cloud;

        location / {
            proxy_pass https://intrafind.github.io/if-sitesearch/;
        }
    }

    server {
        listen 80;
        server_name affiliate.sitesearch.cloud;

        location / {
            add_header set-cookie 'affiliate = $arg_affiliate; domain = sitesearch.cloud';
            return 301 https://sitesearch.cloud$request_uri;
        }
    }

    server {
        listen 80;
        server_name green.sitesearch.cloud;

        location / {
            include /etc/nginx/snippets/cors-headers.conf;
            proxy_pass http://sis-sitesearch:8001;
        }
    }

    server {
        listen 80;
        server_name blue.sitesearch.cloud;

        location / {
            include /etc/nginx/snippets/cors-headers.conf;
            proxy_pass http://sis-sitesearch:8001;
        }
    }

    server {
        listen 80;
        server_name logging.sitesearch.cloud;

        location / {
            auth_basic "Protected";
            auth_basic_user_file /etc/nginx/.htpasswd;
            proxy_pass http://kibana:5601;
        }
    }

    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    '$status $body_bytes_sent "$http_referer" '
    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout 65;
    resolver_timeout  5s;

    gzip on;
    gzip_types text/plain text/css application/xml application/json application/javascript;

    map $http_upgrade $connection_upgrade {
        default upgrade;
        "" close;
    }
    include /etc/nginx/conf.d/*.conf;
}

