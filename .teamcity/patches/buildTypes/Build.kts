/*
 * Copyright 2019 IntraFind Software AG. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package patches.buildTypes

import jetbrains.buildServer.configs.kotlin.v2018_2.*
import jetbrains.buildServer.configs.kotlin.v2018_2.buildSteps.ScriptBuildStep
import jetbrains.buildServer.configs.kotlin.v2018_2.buildSteps.script
import jetbrains.buildServer.configs.kotlin.v2018_2.ui.*

/*
This patch script was generated by TeamCity on settings change in UI.
To apply the patch, change the buildType with id = 'Build'
accordingly, and delete the patch script.
*/
changeBuildType(RelativeId("Build")) {
    expectSteps {
        script {
            name = "Enable e-mail delivery"
            scriptContent = """
                cp -r /root/docker-build-data/api-sitesearch/service/config service/
                chmod -R 755 service/config
            """.trimIndent()
        }
        script {
            name = "Build service.jar w/ Docker (using TeamCity Docker plugin)"
            scriptContent = "./gradlew clean build --info"
            dockerImage = "openjdk:13-alpine"
            dockerImagePlatform = ScriptBuildStep.ImagePlatform.Linux
            dockerPull = true
            dockerRunParameters = "-v /root/.gradle:/root/.gradle"
        }
        script {
            name = "Build & Run Container"
            scriptContent = "sh start-sitesearch.sh"
        }
    }
    steps {
        update<ScriptBuildStep>(1) {
            scriptContent = """
                #SPRING_PROFILES_ACTIVE=oss ./gradlew clean build --info
                ./gradlew clean includeKotlinJsRuntime build --info
            """.trimIndent()
            dockerImage = "openjdk:13-alpine"
            dockerImagePlatform = ScriptBuildStep.ImagePlatform.Linux
            dockerPull = true
        }
    }
}
